apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "habit.fullname" . }}
  labels:
    {{- include "habit.labels" . | nindent 4 }}
    app.kubernetes.io/version: {{ .Values.appVersionOverride | default .Chart.AppVersion | quote }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: {{ .Values.updateStrategyType }}
  selector:
    matchLabels:
  {{- include "habit.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "habit.labels" . | nindent 8 }}
        app.kubernetes.io/version: {{ .Values.appVersionOverride | default .Chart.AppVersion | quote }}
        {{- with .Values.podLabels -}}
        {{- toYaml . | nindent 8 }}
        {{- end -}}
      {{- with .Values.podAnnotations }}
      annotations:
    {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ default (include "habit.fullname" . ) .Values.serviceAccount.name }}
      {{- end }}
      {{- if .Values.persistence.deployPostgres }}
      initContainers:
        - name: wait-for-postgresql
          image: {{ template "habit.init.image" . }}
          imagePullPolicy: {{ .Values.init.image.pullPolicy }}
          command:
            - sh
            - -c
            - |
              until printf "." && nc -z -w 2 {{ template "habit.postgresql.fullname" . }} {{ .Values.postgresql.service.port }}; do
                  sleep 2;
              done;

              echo 'PostgreSQL OK âœ“'
      {{- end }}
      containers:
        - name: {{ template "habit.fullname" . }}
          image: {{ template "habit.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http-habit
              containerPort: 9001
          env:
            {{- include "habit.persistence.vars" .  | indent 12 }}
            {{- range .Values.extraEnv }}
            {{- if .name }}
            - name: {{ .name }}
              {{- if .value }}
              value: {{ .value | quote }}
          {{- end }}
          {{- end }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http-habit
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
